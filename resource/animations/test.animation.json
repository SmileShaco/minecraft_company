{
	"format_version": "1.8.0",
	"animations": {
		"animation.test.attack_bare_hand": {
			"loop": true,
			"bones": {
				"leftarm": {
					"rotation": [
						"-90.0 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) - (math.sin(query.life_time * 76.776372) * 2.865) - this",
						"5.73 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 0.6) - this",
						"math.cos(query.life_time * 103.13244) * -2.865 - 2.865 - this"
					]
				},
				"rightarm": {
					"rotation": [
						"90.0 * (variable.is_brandishing_spear - 1.0) - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) + (math.sin(query.life_time * 76.776372) * 2.865) - this",
						"(math.sin(variable.attack_time * 180.0) * 57.3) * 0.6 - 5.73 - this",
						"math.cos(query.life_time * 103.13244) * 2.865 + 2.865 - this"
					]
				}
			}
		},
		"animation.zombie.swimming": {
			"loop": true,
			"animation_length": 2,
			"bones": {
				"body": {
					"rotation": {
						"0.0": ["variable.swim_amount * (90.0 + query.target_x_rotation)", 0, 0],
						"2.0": ["17.5+variable.swim_amount * (90.0 + query.target_x_rotation)", 0, 0]
					},
					"position": {
						"0.0": [0, "variable.swim_amount * -10.0 - this", "variable.swim_amount * 9.0 - this"],
						"2.0": [0, "-8+variable.swim_amount * -10.0 - this", "-4+variable.swim_amount * 9.0 - this"]
					}
				},
				"leftArm": {
					"rotation": {
						"0.0": [
							"math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) - (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this",
							"math.lerp(this, 14.325, variable.swim_amount) - this",
							"math.lerp(this, 14.325, variable.swim_amount) - (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"
						],
						"2.0": [
							"60+math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) - (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this",
							"0+math.lerp(this, 14.325, variable.swim_amount) - this",
							"0+math.lerp(this, 14.325, variable.swim_amount) - (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"
						]
					},
					"position": [0, -8, -4]
				},
				"leftLeg": {
					"rotation": {
						"0.0": ["math.lerp(this, math.cos(query.life_time * 390.0 + 180.0) * 0.3, variable.swim_amount)", -0.1, -0.1],
						"2.0": ["55+math.lerp(this, math.cos(query.life_time * 390.0 + 180.0) * 0.3, variable.swim_amount)", -0.1, -0.1]
					},
					"position": [0, -8, 0]
				},
				"rightArm": {
					"rotation": {
						"0.0": [
							"math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) + (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this",
							"math.lerp(this, 14.325, variable.swim_amount) - this",
							"math.lerp(this, -14.325, variable.swim_amount) + (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"
						],
						"2.0": [
							"-46.3679+math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) + (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this",
							"-53.1047+math.lerp(this, 14.325, variable.swim_amount) - this",
							"-17.1768+math.lerp(this, -14.325, variable.swim_amount) + (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"
						]
					},
					"position": [0, -8, -4]
				},
				"rightLeg": {
					"rotation": {
						"0.0": ["math.lerp(this, math.cos(query.life_time * 390.0) * 0.3, variable.swim_amount)", 0.1, 0.1],
						"2.0": ["-27.5+math.lerp(this, math.cos(query.life_time * 390.0) * 0.3, variable.swim_amount)", 0.1, 0.1]
					},
					"position": [0, -7, 0]
				},
				"head": {
					"rotation": [32.5, 0, 0],
					"position": [0, -8, -5]
				}
			}
		}
	}
}